using System;

public class Node
{
    public Node next;
    public Object data;
}

public class LinkedList
{
    private Node head;

    public void printAllNodes()
    {
        Node current = head;
        while (current != null)
        {
            Console.WriteLine(current.data);
            current = current.next;
        }
        Console.WriteLine("\n");
    }

    public void AddFirst(Object data)
    {
        Node toAdd = new Node();

        toAdd.data = data;
        toAdd.next = head;

        head = toAdd;
    }

    public void AddLast(Object data)
    {
        if (head == null)
        {
            head = new Node();

            head.data = data;
            head.next = null;
        }
        else
        {
            Node toAdd = new Node();
            toAdd.data = data;

            Node current = head;
            while (current.next != null)
            {
                current = current.next;
            }

            current.next = toAdd;
        }
    }
    
    public bool Contains(Object input)
    {
        Node current = head;
        bool ifTrue = false;
        while (current != null)
        {
            if (input == current.data)
            {
                ifTrue = true;
            }
            current = current.next;
        }

        return ifTrue;
    }

    public int Count()
    {
        Node current = head;
        int counter = 0;
        while (current != null)
        {
            counter++;
            current = current.next;
        }
        return counter;
    }

    public void Remove(Object data)
    {
        Node current = head;
        while (current != null && current.next != null)
        {
            if (current.next.data == data)
            {
                current.next = current.next.next;
            }
            current = current.next;
            
        }
    }

    public void RemoveAt(Object data)
    {
        Node current = head;
        int counter = 1;
        while (current != null && current.next != null)
        {
            if (counter == (int) data)
            {
                current.next = current.next.next;
            }
            current = current.next;
            counter++;

        }
    }

    public int IndexOf(Object data)
    {
        Node current = head;
        int pos = 0;
        int counter = 0;
        while (current != null)
        {
            if (data == current.data)
            {
                pos = counter;
            }
            counter++;
            current = current.next;
        }

        return pos;
    }

    public string This(Object data)
    {
        Node current = head;
        int counter = 0;
        string str = "";
        while (current != null)
        {
            if (counter == (int) data)
            {
                str = (string) current.data;
            }
            counter++;
            current = current.next;
        }

        return str;
    }
}

class Program
{
    static void Main(string[] args)
    {
        
        LinkedList myList1 = new LinkedList();
        myList1.AddFirst("Hello");
        myList1.AddFirst("Awesome");
        myList1.AddFirst("World");
        myList1.printAllNodes(); //Shows that the list is now World, Magical, Hello, so the items are added at the front
        
        LinkedList myList2 = new LinkedList();
        myList2.AddLast("Hello");
        myList2.AddLast("Awesome");
        myList2.AddLast("World");
        myList2.printAllNodes(); //Shows that the items are appended to the list

        if (myList2.Contains("world")) //Testing that something that isn't in the list returns false
        {
            Console.WriteLine("'world' is in myList2 - something is broken!");
        }
        else {
            Console.WriteLine("'world' is not in myList2 - working correctly!");
        }
        if (myList2.Contains("World")) //Testing that something that is in the list returns true
        {
            Console.WriteLine("'World' is in myList2 - working correctly!");
        }
        else {
            Console.WriteLine("'World' is not in myList2 - something is broken!");
        }

        Console.WriteLine(myList2.Count()); //Should print 3 to the console
        myList2.AddLast("Program");
        Console.WriteLine(myList2.Count()); //Should print 4 to the console
        
        myList2.Remove("World");
        myList2.printAllNodes(); // Should print Hello Awesome Program
        myList2.Remove("Awesome"); 
        myList2.printAllNodes(); // Should print Hello Program

        myList2.AddLast("World");
        myList2.AddLast("Awesome");
        
        myList2.RemoveAt(2); //Should remove World from the list
        myList2.printAllNodes();

        Console.WriteLine(myList2.IndexOf("Hello")); //Should print 0
        Console.WriteLine(myList2.IndexOf("Awesome")); // Should print 2
        
        Console.WriteLine(myList2.This(0)); // Should print Hello
        Console.WriteLine(myList2.This(2)); // Should print Awesome
    }
}
